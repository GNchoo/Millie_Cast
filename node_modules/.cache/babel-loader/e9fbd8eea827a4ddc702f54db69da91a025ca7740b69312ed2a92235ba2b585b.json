{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ch\\\\Documents\\\\GitHub\\\\book_project\\\\src\\\\pages\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { apiKey, baseURL } from \"../components/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchPage() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // 알라딘 API를 호출하는 함수\n    const searchBooks = async () => {\n      setIsLoading(true);\n      try {\n        const url = `${baseURL}?TTBKey=${apiKey}&Query=spider&QueryType=Title&MaxResults=10&Start=1&SearchTarget=Book&Output=JS&Version=20131101`;\n        const response = await axios.get(url);\n        setSearchResults(response.data.item);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    searchBooks();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error occurred: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC54C\\uB77C\\uB518 \\uAC80\\uC0C9 \\uACB0\\uACFC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.title\n      }, item.itemId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchPage, \"NPja1/gpWGdG1APm3TRmWPPut0Q=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","apiKey","baseURL","jsxDEV","_jsxDEV","SearchPage","_s","searchResults","setSearchResults","isLoading","setIsLoading","error","setError","searchBooks","url","response","get","data","item","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","title","itemId","_c","$RefreshReg$"],"sources":["C:/Users/ch/Documents/GitHub/book_project/src/pages/Search.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { apiKey, baseURL } from \"../components/api\";\r\n\r\nfunction SearchPage() {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // 알라딘 API를 호출하는 함수\r\n    const searchBooks = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const url = `${baseURL}?TTBKey=${apiKey}&Query=spider&QueryType=Title&MaxResults=10&Start=1&SearchTarget=Book&Output=JS&Version=20131101`;\r\n        const response = await axios.get(url);\r\n        setSearchResults(response.data.item);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    searchBooks();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error occurred: {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>알라딘 검색 결과</h1>\r\n      <ul>\r\n        {searchResults.map((item) => (\r\n          <li key={item.itemId}>{item.title}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BH,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMI,GAAG,GAAI,GAAEZ,OAAQ,WAAUD,MAAO,kGAAiG;QACzI,MAAMc,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACF,GAAG,CAAC;QACrCN,gBAAgB,CAACO,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC;MACtC,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,SAAS;QACRD,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDG,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,SAAS,EAAE;IACb,oBAAOL,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIZ,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAe,QAAA,GAAK,kBAAgB,EAACR,KAAK,CAACa,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACnD;EAEA,oBACEnB,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnB,OAAA;MAAAe,QAAA,EACGZ,aAAa,CAACkB,GAAG,CAAEP,IAAI,iBACtBd,OAAA;QAAAe,QAAA,EAAuBD,IAAI,CAACQ;MAAK,GAAxBR,IAAI,CAACS,MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACjB,EAAA,CAzCQD,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA2CnB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}