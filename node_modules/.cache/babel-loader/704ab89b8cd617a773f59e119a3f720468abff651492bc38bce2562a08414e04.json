{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ch\\\\Documents\\\\GitHub\\\\book_project\\\\src\\\\pages\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { bookSearch } from \"../components/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    if (query.length > 0) {\n      bookSearchHttpHandler(query, true);\n    }\n  }, [query]);\n  const bookSearchHttpHandler = async (query, reset) => {\n    const params = {\n      query: query,\n      sort: \"accuracy\",\n      page: 1,\n      size: 10\n    };\n    try {\n      const {\n        data\n      } = await bookSearch(params);\n      if (reset) {\n        setBooks(data.documents);\n      } else {\n        setBooks(prevBooks => prevBooks.concat(data.documents));\n      }\n    } catch (error) {\n      console.error(\"책 검색 에러:\", error);\n    }\n  };\n  const handleSearch = text => {\n    setQuery(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n_s(Search, \"H9Q0DEt6Y4Sq51VjB9iUhmiylg8=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useEffect","useState","bookSearch","jsxDEV","_jsxDEV","Search","_s","books","setBooks","query","setQuery","length","bookSearchHttpHandler","reset","params","sort","page","size","data","documents","prevBooks","concat","error","console","handleSearch","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ch/Documents/GitHub/book_project/src/pages/Search.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { bookSearch } from \"../components/api\";\r\n\r\nconst Search = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (query.length > 0) {\r\n      bookSearchHttpHandler(query, true);\r\n    }\r\n  }, [query]);\r\n\r\n  const bookSearchHttpHandler = async (query, reset) => {\r\n    const params = {\r\n      query: query,\r\n      sort: \"accuracy\",\r\n      page: 1,\r\n      size: 10,\r\n    };\r\n\r\n    try {\r\n      const { data } = await bookSearch(params);\r\n      if (reset) {\r\n        setBooks(data.documents);\r\n      } else {\r\n        setBooks((prevBooks) => prevBooks.concat(data.documents));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"책 검색 에러:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (text) => {\r\n    setQuery(text);\r\n  };\r\n\r\n  return <div>{/* 검색 입력과 버튼 등의 UI 요소 */}</div>;\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MACpBC,qBAAqB,CAACH,KAAK,EAAE,IAAI,CAAC;IACpC;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMG,qBAAqB,GAAG,MAAAA,CAAOH,KAAK,EAAEI,KAAK,KAAK;IACpD,MAAMC,MAAM,GAAG;MACbL,KAAK,EAAEA,KAAK;MACZM,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE;IACR,CAAC;IAED,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMhB,UAAU,CAACY,MAAM,CAAC;MACzC,IAAID,KAAK,EAAE;QACTL,QAAQ,CAACU,IAAI,CAACC,SAAS,CAAC;MAC1B,CAAC,MAAM;QACLX,QAAQ,CAAEY,SAAS,IAAKA,SAAS,CAACC,MAAM,CAACH,IAAI,CAACC,SAAS,CAAC,CAAC;MAC3D;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAClC;EACF,CAAC;EAED,MAAME,YAAY,GAAIC,IAAI,IAAK;IAC7Bf,QAAQ,CAACe,IAAI,CAAC;EAChB,CAAC;EAED,oBAAOrB,OAAA;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAoC,CAAC;AAC9C,CAAC;AAACvB,EAAA,CAnCID,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAqCZ,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}