{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ch\\\\Documents\\\\GitHub\\\\book_project\\\\src\\\\pages\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SearchMain from \"../containers/Search/SearchMain\";\nimport SearchFilter from \"../containers/SearchSearchFilter\";\nimport Nav from \"../../components/Nav/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [isOnFocus, setIsOnFocus] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isResultClicked, setIsResultClicked] = useState(false);\n  const [{\n    type,\n    placeholder,\n    api\n  }, setFilter] = useState({\n    type: \"전체\",\n    placeholder: \"검색어를 입력하세요\",\n    api: \"all\"\n  });\n  const focusInputIn = () => {\n    setIsOnFocus(true);\n  };\n  const handleInputKeyword = e => {\n    setSearchValue(e.target.value);\n  };\n  const clearSearchValue = () => {\n    setSearchValue(\"\");\n  };\n  const searchResultOn = () => {\n    setIsResultClicked(true);\n  };\n  const clearSearchMain = () => {\n    setIsOnFocus(false);\n    setIsResultClicked(false);\n    clearSearchValue();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(MaxWidth, {\n        children: [/*#__PURE__*/_jsxDEV(SearchFilter, {\n          type: type,\n          setFilter: setFilter,\n          isOnFocus: isOnFocus,\n          clearSearchMain: clearSearchMain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchMain, {\n          placeholder: placeholder,\n          searchTarget: api,\n          isOnFocus: isOnFocus,\n          focusInputIn: focusInputIn,\n          handleInputKeyword: handleInputKeyword,\n          clearSearchValue: clearSearchValue,\n          searchValue: searchValue,\n          isResultClicked: isResultClicked,\n          searchResultOn: searchResultOn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Search, \"OkpnBC8QEPhUNQJYfETLEuheL8o=\");\n_c = Search;\nexport default Search;\nconst Container = styled.div`\n  width: 100%;\n  margin-left: 60px;\n`;\n_c2 = Container;\nconst MaxWidth = styled.div`\n  max-width: 70rem;\n  min-width: 40rem;\n  margin: 10px auto;\n  padding: 15px 10px;\n`;\n_c3 = MaxWidth;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"MaxWidth\");","map":{"version":3,"names":["React","useState","styled","SearchMain","SearchFilter","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","_s","isOnFocus","setIsOnFocus","searchValue","setSearchValue","isResultClicked","setIsResultClicked","type","placeholder","api","setFilter","focusInputIn","handleInputKeyword","e","target","value","clearSearchValue","searchResultOn","clearSearchMain","children","fileName","_jsxFileName","lineNumber","columnNumber","Container","MaxWidth","searchTarget","_c","div","_c2","_c3","$RefreshReg$"],"sources":["C:/Users/ch/Documents/GitHub/book_project/src/pages/Search.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SearchMain from \"../containers/Search/SearchMain\";\r\nimport SearchFilter from \"../containers/SearchSearchFilter\";\r\nimport Nav from \"../../components/Nav/Nav\";\r\n\r\nconst Search = () => {\r\n  const [isOnFocus, setIsOnFocus] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isResultClicked, setIsResultClicked] = useState(false);\r\n\r\n  const [{ type, placeholder, api }, setFilter] = useState({\r\n    type: \"전체\",\r\n    placeholder: \"검색어를 입력하세요\",\r\n    api: \"all\",\r\n  });\r\n\r\n  const focusInputIn = () => {\r\n    setIsOnFocus(true);\r\n  };\r\n\r\n  const handleInputKeyword = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const clearSearchValue = () => {\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  const searchResultOn = () => {\r\n    setIsResultClicked(true);\r\n  };\r\n\r\n  const clearSearchMain = () => {\r\n    setIsOnFocus(false);\r\n    setIsResultClicked(false);\r\n    clearSearchValue();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <Container>\r\n        <MaxWidth>\r\n          <SearchFilter type={type} setFilter={setFilter} isOnFocus={isOnFocus} clearSearchMain={clearSearchMain} />\r\n          <SearchMain\r\n            placeholder={placeholder}\r\n            searchTarget={api}\r\n            isOnFocus={isOnFocus}\r\n            focusInputIn={focusInputIn}\r\n            handleInputKeyword={handleInputKeyword}\r\n            clearSearchValue={clearSearchValue}\r\n            searchValue={searchValue}\r\n            isResultClicked={isResultClicked}\r\n            searchResultOn={searchResultOn}\r\n          />\r\n        </MaxWidth>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  margin-left: 60px;\r\n`;\r\n\r\nconst MaxWidth = styled.div`\r\n  max-width: 70rem;\r\n  min-width: 40rem;\r\n  margin: 10px auto;\r\n  padding: 15px 10px;\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}