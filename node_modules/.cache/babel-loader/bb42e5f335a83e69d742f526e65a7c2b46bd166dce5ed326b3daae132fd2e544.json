{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ch\\\\Documents\\\\GitHub\\\\book_project\\\\src\\\\components\\\\Home\\\\BestSeller\\\\BestBooks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BookItem } from \"../../../containers/Home/BestSeller\";\nimport axios from \"axios\";\nimport { BestBooksContainer, Book, BookTitle, BookWriter, ImageContainer, Text, Writer } from \"./BestBooksSty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BestBooks = () => {\n  _s();\n  const [results, setResults] = useState([]);\n\n  // useEffect(() => {\n  //   // 알라딘 API 요청을 여기서 수행하여 결과를 저장합니다.\n  //   const fetchResults = async () => {\n  //     // 알라딘 API 요청 코드 작성\n  //     // 요청 결과를 저장하는 데 필요한 데이터 추출\n  //     try {\n  //       const response = await axios.get(\n  //         \"http://www.aladin.co.kr/ttb/api/ItemList.aspx?ttbkey=ttbwjdalswn2181719001&QueryType=Bestseller&MaxResults=10&start=1&SearchTarget=Book&output=xml&Version=20131101\",\n  //         {\n  //           params: {\n  //             ttbkey: \"ttbwjdalswn2181719001\",\n  //             Query: \"베스트 셀러\",\n  //           },\n  //         }\n  //       );\n  //       const data = response; /* 알라딘 API 응답 결과에서 필요한 데이터 추출 */\n  //       setResults(data);\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   };\n\n  //   fetchResults();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(BestBooksContainer, {\n    children: BookItem.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"80px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: item.name\n      }, item.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n        children: item.contents.map((book, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Book, {\n            src: book.src,\n            alt: book.alt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(BookTitle, {\n            children: book.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(BookWriter, {\n            children: book.writer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(BestBooks, \"QYmH5xyAMv1uIO9V7tguRx7oNwo=\");\n_c = BestBooks;\nexport default BestBooks;\nvar _c;\n$RefreshReg$(_c, \"BestBooks\");","map":{"version":3,"names":["React","useState","useEffect","BookItem","axios","BestBooksContainer","Book","BookTitle","BookWriter","ImageContainer","Text","Writer","jsxDEV","_jsxDEV","BestBooks","_s","results","setResults","children","map","item","style","marginBottom","name","fileName","_jsxFileName","lineNumber","columnNumber","contents","book","index","src","alt","text","writer","_c","$RefreshReg$"],"sources":["C:/Users/ch/Documents/GitHub/book_project/src/components/Home/BestSeller/BestBooks.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { BookItem } from \"../../../containers/Home/BestSeller\";\r\nimport axios from \"axios\";\r\nimport {\r\n  BestBooksContainer,\r\n  Book,\r\n  BookTitle,\r\n  BookWriter,\r\n  ImageContainer,\r\n  Text,\r\n  Writer,\r\n} from \"./BestBooksSty\";\r\n\r\nconst BestBooks = () => {\r\n  const [results, setResults] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   // 알라딘 API 요청을 여기서 수행하여 결과를 저장합니다.\r\n  //   const fetchResults = async () => {\r\n  //     // 알라딘 API 요청 코드 작성\r\n  //     // 요청 결과를 저장하는 데 필요한 데이터 추출\r\n  //     try {\r\n  //       const response = await axios.get(\r\n  //         \"http://www.aladin.co.kr/ttb/api/ItemList.aspx?ttbkey=ttbwjdalswn2181719001&QueryType=Bestseller&MaxResults=10&start=1&SearchTarget=Book&output=xml&Version=20131101\",\r\n  //         {\r\n  //           params: {\r\n  //             ttbkey: \"ttbwjdalswn2181719001\",\r\n  //             Query: \"베스트 셀러\",\r\n  //           },\r\n  //         }\r\n  //       );\r\n  //       const data = response; /* 알라딘 API 응답 결과에서 필요한 데이터 추출 */\r\n  //       setResults(data);\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchResults();\r\n  // }, []);\r\n\r\n  return (\r\n    <BestBooksContainer>\r\n      {BookItem.map((item) => (\r\n        <div style={{ marginBottom: \"80px\" }}>\r\n          <Text key={item.name}>{item.name}</Text>\r\n          <ImageContainer>\r\n            {item.contents.map((book, index) => (\r\n              <div key={index}>\r\n                <Book src={book.src} alt={book.alt} />\r\n                <BookTitle>{book.text}</BookTitle>\r\n                <BookWriter>{book.writer}</BookWriter>\r\n              </div>\r\n            ))}\r\n          </ImageContainer>\r\n        </div>\r\n      ))}\r\n    </BestBooksContainer>\r\n  );\r\n};\r\n\r\nexport default BestBooks;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,qCAAqC;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,kBAAkB,EAClBC,IAAI,EACJC,SAAS,EACTC,UAAU,EACVC,cAAc,EACdC,IAAI,EACJC,MAAM,QACD,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,oBACEY,OAAA,CAACR,kBAAkB;IAAAa,QAAA,EAChBf,QAAQ,CAACgB,GAAG,CAAEC,IAAI,iBACjBP,OAAA;MAAKQ,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAJ,QAAA,gBACnCL,OAAA,CAACH,IAAI;QAAAQ,QAAA,EAAkBE,IAAI,CAACG;MAAI,GAArBH,IAAI,CAACG,IAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAAC,eACxCd,OAAA,CAACJ,cAAc;QAAAS,QAAA,EACZE,IAAI,CAACQ,QAAQ,CAACT,GAAG,CAAC,CAACU,IAAI,EAAEC,KAAK,kBAC7BjB,OAAA;UAAAK,QAAA,gBACEL,OAAA,CAACP,IAAI;YAACyB,GAAG,EAAEF,IAAI,CAACE,GAAI;YAACC,GAAG,EAAEH,IAAI,CAACG;UAAI;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtCd,OAAA,CAACN,SAAS;YAAAW,QAAA,EAAEW,IAAI,CAACI;UAAI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAClCd,OAAA,CAACL,UAAU;YAAAU,QAAA,EAAEW,IAAI,CAACK;UAAM;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAA,GAH9BG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEzB,CAAC;AAACZ,EAAA,CA9CID,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}