{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ch\\\\Documents\\\\GitHub\\\\book_project\\\\src\\\\pages\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [publisher, setPublisher] = useState(\"\");\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n  const handleAuthorChange = e => {\n    setAuthor(e.target.value);\n  };\n  const handlePublisherChange = e => {\n    setPublisher(e.target.value);\n  };\n  const handleSearch = () => {\n    // 검색 버튼 클릭 시 실행되는 로직을 작성하세요.\n    // 예를 들어, API 호출이나 데이터 처리 등을 수행할 수 있습니다.\n    // 여기서는 간단하게 검색어를 콘솔에 출력하는 예시를 보여드립니다.\n    console.log(\"검색어:\", title, author, publisher);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: handleTitleChange,\n      placeholder: \"\\uC81C\\uBAA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: author,\n      onChange: handleAuthorChange,\n      placeholder: \"\\uC800\\uC790\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: publisher,\n      onChange: handlePublisherChange,\n      placeholder: \"\\uCD9C\\uD310\\uC0AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"WxcD7RtdSTl/w47Y013KaAlY60U=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Search","_s","title","setTitle","author","setAuthor","publisher","setPublisher","handleTitleChange","e","target","value","handleAuthorChange","handlePublisherChange","handleSearch","console","log","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ch/Documents/GitHub/book_project/src/pages/Search.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Search = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [publisher, setPublisher] = useState(\"\");\r\n\r\n  const handleTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const handleAuthorChange = (e) => {\r\n    setAuthor(e.target.value);\r\n  };\r\n\r\n  const handlePublisherChange = (e) => {\r\n    setPublisher(e.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    // 검색 버튼 클릭 시 실행되는 로직을 작성하세요.\r\n    // 예를 들어, API 호출이나 데이터 처리 등을 수행할 수 있습니다.\r\n    // 여기서는 간단하게 검색어를 콘솔에 출력하는 예시를 보여드립니다.\r\n    console.log(\"검색어:\", title, author, publisher);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" value={title} onChange={handleTitleChange} placeholder=\"제목\" />\r\n      <input type=\"text\" value={author} onChange={handleAuthorChange} placeholder=\"저자\" />\r\n      <input type=\"text\" value={publisher} onChange={handlePublisherChange} placeholder=\"출판사\" />\r\n      <button onClick={handleSearch}>검색</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC/BN,QAAQ,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,kBAAkB,GAAIH,CAAC,IAAK;IAChCJ,SAAS,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAME,qBAAqB,GAAIJ,CAAC,IAAK;IACnCF,YAAY,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEd,KAAK,EAAEE,MAAM,EAAEE,SAAS,CAAC;EAC/C,CAAC;EAED,oBACEP,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACP,KAAK,EAAET,KAAM;MAACiB,QAAQ,EAAEX,iBAAkB;MAACY,WAAW,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjFzB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACP,KAAK,EAAEP,MAAO;MAACe,QAAQ,EAAEP,kBAAmB;MAACQ,WAAW,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnFzB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACP,KAAK,EAAEL,SAAU;MAACa,QAAQ,EAAEN,qBAAsB;MAACO,WAAW,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1FzB,OAAA;MAAQ0B,OAAO,EAAEX,YAAa;MAAAG,QAAA,EAAC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAhCID,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAkCZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}