{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ch\\\\Documents\\\\GitHub\\\\book_project\\\\src\\\\pages\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { blogSearch } from \"./api\";\nimport \"./App.css\";\nimport Item from \"./Item\";\nimport { withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = props => {\n  _s();\n  const {\n    params\n  } = props.match;\n  const keyword = params.keyword || \"\";\n  const [blogs, setBlogs] = useState([]);\n  const [text, setText] = useState(keyword);\n  // const [query, setQuery] = useState(keyword);\n\n  useEffect(() => {\n    if (keyword.length > 0) {\n      blogSearchHttpHandler(keyword, true);\n    } else {\n      setBlogs([]);\n    }\n  }, [keyword]);\n\n  // 엔터를 눌렀을 때 호출 되는 함수\n  const onEnter = e => {\n    if (e.keyCode === 13) {\n      if (text.length === 0) props.history.push(`/`);else props.history.push(`/search/${text}`);\n    }\n  };\n\n  // text 검색어가 바뀔 때 호출되는 함수.\n  const onTextUpdate = e => {\n    setText(e.target.value);\n  };\n  const blogSearchHttpHandler = async (query, reset) => {\n    const params = {\n      query: query,\n      sort: \"accuracy\",\n      // accuracy | recency 정확도 or 최신\n      page: 1,\n      // 페이지번호\n      size: 10 // 한 페이지에 보여 질 문서의 개수\n    };\n\n    const {\n      data\n    } = await blogSearch(params);\n    if (reset) {\n      setBlogs(data.documents);\n    } else {\n      setBlogs(blogs.concat(data.documents));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825 \\uD558\\uC138\\uC694...\",\n      name: \"query\",\n      className: \"input_search\",\n      onKeyDown: onEnter // enter\n      ,\n      onChange: onTextUpdate // change\n      ,\n      value: text // view\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: blogs.map((blog, index) => /*#__PURE__*/_jsxDEV(Item, {\n        thumbnail: blog.thumbnail,\n        title: blog.title,\n        blogname: blog.blogname,\n        contents: blog.contents,\n        url: blog.url\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0pDjV1V6Nu5BQFe3Q10XGZ4UUdU=\");\n_c = App;\nexport default _c2 = withRouter(App);\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","blogSearch","Item","withRouter","jsxDEV","_jsxDEV","App","props","_s","params","match","keyword","blogs","setBlogs","text","setText","length","blogSearchHttpHandler","onEnter","e","keyCode","history","push","onTextUpdate","target","value","query","reset","sort","page","size","data","documents","concat","className","children","type","placeholder","name","onKeyDown","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","blog","index","thumbnail","title","blogname","contents","url","_c","_c2","$RefreshReg$"],"sources":["C:/Users/ch/Documents/GitHub/book_project/src/pages/Search.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { blogSearch } from \"./api\";\r\n\r\nimport \"./App.css\";\r\nimport Item from \"./Item\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst App = (props) => {\r\n  const { params } = props.match;\r\n  const keyword = params.keyword || \"\";\r\n\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [text, setText] = useState(keyword);\r\n  // const [query, setQuery] = useState(keyword);\r\n\r\n  useEffect(() => {\r\n    if (keyword.length > 0) {\r\n      blogSearchHttpHandler(keyword, true);\r\n    } else {\r\n      setBlogs([]);\r\n    }\r\n  }, [keyword]);\r\n\r\n  // 엔터를 눌렀을 때 호출 되는 함수\r\n  const onEnter = (e) => {\r\n    if (e.keyCode === 13) {\r\n      if (text.length === 0) props.history.push(`/`);\r\n      else props.history.push(`/search/${text}`);\r\n    }\r\n  };\r\n\r\n  // text 검색어가 바뀔 때 호출되는 함수.\r\n  const onTextUpdate = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const blogSearchHttpHandler = async (query, reset) => {\r\n    const params = {\r\n      query: query,\r\n      sort: \"accuracy\", // accuracy | recency 정확도 or 최신\r\n      page: 1, // 페이지번호\r\n      size: 10, // 한 페이지에 보여 질 문서의 개수\r\n    };\r\n\r\n    const { data } = await blogSearch(params);\r\n    if (reset) {\r\n      setBlogs(data.documents);\r\n    } else {\r\n      setBlogs(blogs.concat(data.documents));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <input\r\n        type=\"search\"\r\n        placeholder=\"검색어를 입력 하세요...\"\r\n        name=\"query\"\r\n        className=\"input_search\"\r\n        onKeyDown={onEnter} // enter\r\n        onChange={onTextUpdate} // change\r\n        value={text} // view\r\n      />\r\n\r\n      <ul>\r\n        {blogs.map((blog, index) => (\r\n          <Item key={index} thumbnail={blog.thumbnail} title={blog.title} blogname={blog.blogname} contents={blog.contents} url={blog.url} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}