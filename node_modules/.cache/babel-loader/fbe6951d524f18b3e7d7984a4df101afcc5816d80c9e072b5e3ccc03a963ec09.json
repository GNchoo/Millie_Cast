{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ch\\\\Documents\\\\GitHub\\\\book_project\\\\src\\\\components\\\\Login\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./LoginForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [id, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleIdChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // 여기에 DB에 연결하는 로직을 작성합니다.\n    // id와 password 변수를 사용하여 DB와 통신하고 인증 로직을 수행할 수 있습니다.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"id\",\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        value: id,\n        onChange: handleIdChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"0TBxoMoSedtzA2JivT5SMRkcXr0=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginForm","_s","id","setEmail","password","setPassword","handleIdChange","e","target","value","handlePasswordChange","handleSubmit","preventDefault","className","children","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ch/Documents/GitHub/book_project/src/components/Login/LoginForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./LoginForm.css\";\r\n\r\nconst LoginForm = () => {\r\n  const [id, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleIdChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // 여기에 DB에 연결하는 로직을 작성합니다.\r\n    // id와 password 변수를 사용하여 DB와 통신하고 인증 로직을 수행할 수 있습니다.\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form-container\">\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"id\"\r\n          placeholder=\"아이디\"\r\n          value={id}\r\n          onChange={handleIdChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"패스워드\"\r\n          value={password}\r\n          onChange={handlePasswordChange}\r\n        />\r\n        <button type=\"submit\">로그인</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,EAAE,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,cAAc,GAAIC,CAAC,IAAK;IAC5BJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,oBAAoB,GAAIH,CAAC,IAAK;IAClCF,WAAW,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAME,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB;IACA;EACF,CAAC;;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnCf,OAAA;MAAMc,SAAS,EAAC,YAAY;MAACE,QAAQ,EAAEJ,YAAa;MAAAG,QAAA,gBAClDf,OAAA;QACEiB,IAAI,EAAC,IAAI;QACTC,WAAW,EAAC,oBAAK;QACjBR,KAAK,EAAEP,EAAG;QACVgB,QAAQ,EAAEZ;MAAe;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFvB,OAAA;QACEiB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,0BAAM;QAClBR,KAAK,EAAEL,QAAS;QAChBc,QAAQ,EAAER;MAAqB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFvB,OAAA;QAAQiB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACrB,EAAA,CArCID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}