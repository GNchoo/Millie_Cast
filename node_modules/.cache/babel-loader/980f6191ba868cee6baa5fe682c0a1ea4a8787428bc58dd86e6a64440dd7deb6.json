{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ch\\\\Documents\\\\GitHub\\\\book_project\\\\src\\\\containers\\\\Search\\\\Categories.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API = 'http://54.180.126.99:8000';\nconst Categories = () => {\n  _s();\n  const [categoryList, setCategoryList] = useState([]);\n  useEffect(() => {\n    fetch(`${API}/books/search/Main`).then(res => res.json()).then(res => setCategoryList(res.RESULT));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uBC00\\uB9AC \\uB3C4\\uC11C \\uCE74\\uD14C\\uACE0\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryList, {\n      children: categoryList.map((book, idx) => /*#__PURE__*/_jsxDEV(CategoryWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          alt: \"category1\",\n          src: book.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImgWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Name, {\n            children: book.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Categories, \"ZQlHNAaXzLWzTWMl4FtX0eMwTFc=\");\n_c = Categories;\nexport default Categories;\nconst Title = styled.h3`\n  margin-top: 40px;\n  margin-bottom: 10px;\n  padding: 10px 0;\n  font-weight: 500;\n  font-size: 1.2rem;\n  font-family: 'Noto Sans KR', sans-serif;\n`;\n_c2 = Title;\nconst CategoryList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, minmax(10%, auto));\n  gap: 1rem;\n  min-width: 70rem;\n`;\n_c3 = CategoryList;\nconst CategoryWrapper = styled.div`\n  position: relative;\n  width: 15rem;\n  height: 20rem;\n  overflow: hidden;\n  text-align: start;\n  color: white;\n  cursor: pointer;\n`;\n_c4 = CategoryWrapper;\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n_c5 = Image;\nconst ImgWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(\n    to bottom,\n    transparent 60%,\n    ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.deepGrey;\n}}\n  );\n`;\n_c6 = ImgWrapper;\nconst Name = styled.p`\n  margin: 15px;\n  font-size: 1.2rem;\n  font-weight: 600;\n`;\n_c7 = Name;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Categories\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"CategoryList\");\n$RefreshReg$(_c4, \"CategoryWrapper\");\n$RefreshReg$(_c5, \"Image\");\n$RefreshReg$(_c6, \"ImgWrapper\");\n$RefreshReg$(_c7, \"Name\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","API","Categories","_s","categoryList","setCategoryList","fetch","then","res","json","RESULT","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","CategoryList","map","book","idx","CategoryWrapper","Image","alt","src","image","ImgWrapper","Name","category","_c","h3","_c2","div","_c3","_c4","img","_c5","_ref","theme","deepGrey","_c6","p","_c7","$RefreshReg$"],"sources":["C:/Users/ch/Documents/GitHub/book_project/src/containers/Search/Categories.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst API = 'http://54.180.126.99:8000';\n\nconst Categories = () => {\n  const [categoryList, setCategoryList] = useState([]);\n\n  useEffect(() => {\n    fetch(`${API}/books/search/Main`)\n      .then(res => res.json())\n      .then(res => setCategoryList(res.RESULT));\n  }, []);\n\n  return (\n    <>\n      <Title>밀리 도서 카테고리</Title>\n      <CategoryList>\n        {categoryList.map((book, idx) => (\n          <CategoryWrapper key={idx}>\n            <Image alt=\"category1\" src={book.image} />\n            <ImgWrapper>\n              <Name>{book.category}</Name>\n            </ImgWrapper>\n          </CategoryWrapper>\n        ))}\n      </CategoryList>\n    </>\n  );\n};\n\nexport default Categories;\n\nconst Title = styled.h3`\n  margin-top: 40px;\n  margin-bottom: 10px;\n  padding: 10px 0;\n  font-weight: 500;\n  font-size: 1.2rem;\n  font-family: 'Noto Sans KR', sans-serif;\n`;\n\nconst CategoryList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, minmax(10%, auto));\n  gap: 1rem;\n  min-width: 70rem;\n`;\n\nconst CategoryWrapper = styled.div`\n  position: relative;\n  width: 15rem;\n  height: 20rem;\n  overflow: hidden;\n  text-align: start;\n  color: white;\n  cursor: pointer;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ImgWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(\n    to bottom,\n    transparent 60%,\n    ${({ theme }) => theme.deepGrey}\n  );\n`;\n\nconst Name = styled.p`\n  margin: 15px;\n  font-size: 1.2rem;\n  font-weight: 600;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}